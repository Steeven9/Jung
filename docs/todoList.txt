Done so far
---------------------
- setup gRPC, freud and a basic infrastructure to work on (VMs, repo, ...)
- basic toy example with gRPC
- basic hardcoded instrumentation on the example
- add parameter-dependant complexity (loop 10 RPC calls and malloc)
- print memory usage and execution timestamps
- produce performance traces (txt files with timestamps)
- associate server-side executions with an ID to send to the client
- optimize compilation and installation, add cross-platform instructions
- dockerize the server to easily have it running permanently [non-essential]
- improve instrumentation functions to pass feature object (key/value)
- develop a tool to merge the performance logs from client and server


TODO for next step
---------------------
- improve performace traces format to make it compatible with freud-statistics
- add custom_lock/unlock and custom_wait (->freud-pin.cpp:611)
- add pagefaults stat with getrusage(RUSAGE_THREAD, struct rusage *usage)
- look into condition variables locking
- add demo with multithreading to test locks stats
- change ints to unints_32 or 64 (based on freud)


TODO for long-term
---------------------
- identify some third-party non-trivial distributed applications and analyze them
- write the report
- have a pizza


On hold
---------------------
- develop a reader tool to "decrypt" the traces (with flag for human-readable stamps) [non-essential]


TODO in the next meeting
---------------------
- check on new features
- Freud demo?
